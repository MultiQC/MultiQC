name: "Integration test"
on:
  push:
    branches:
      - main
    paths:
      - "multiqc/modules/**"
      - "pyproject.toml"
  pull_request:
    paths:
      - "multiqc/modules/**"
      - "pyproject.toml"

jobs:
  integration_test_linux:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.12"] # Oldest and newest supported Python versions
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            modules:
              - "multiqc/modules/**"
            all_files:
              - "**"
            pyproject:
              - "pyproject.toml"

      - name: "Set up Python ${{ matrix.python-version }}"
        if: ${{ steps.filter.outputs.changes.modules || steps.filter.outputs.changes.pyproject }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install MultiQC"
        if: ${{ steps.filter.outputs.changes.modules || steps.filter.outputs.changes.pyproject }}
        run: pip install .

      - name: "Download test data"
        if: ${{ steps.filter.outputs.changes.modules || steps.filter.outputs.changes.pyproject }}
        uses: actions/checkout@v4
        with:
          repository: MultiQC/test-data
          path: test-data

      - name: "Run multiqc on the changed modules"
        if: ${{ steps.filter.outputs.changes.modules }}
        run: multiqc -fv --strict test-data/data/modules -m ${{ join(steps.filter.outputs.changes.modules_files, ' -m ') }}

      - name: "Run multiqc on all modules"
        if: ${{ steps.filter.outputs.changes.pyproject }}
        run: multiqc -fv --strict test-data/data/modules

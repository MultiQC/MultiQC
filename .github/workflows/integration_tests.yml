name: "Integration test"
on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"

jobs:
  integration_test_linux:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.12"] # Oldest and newest supported Python versions
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            pyproject:
              - "pyproject.toml"
            modules:
              - "multiqc/modules/**"
            base_module:
              - "multiqc/modules/base_module.py"
            all_files:
              - "**"

      - name: "Get the changed module"
        uses: haya14busa/action-cond@v1
        id: module_changed
        with:
          cond: ${{ ! steps.filter.outputs.changes.base_module && steps.filter.outputs.changes.n_modules == 1 }}
          if_true: "${{ steps.filter.outputs.changes.modules[0] }}"
          if_false: ""

      - name: "pyproject.toml changed"
        uses: haya14busa/action-cond@v1
        id: pyproject_changed
        with:
          cond: ${{ steps.filter.outputs.changes.pyproject }}
          if_true: "true"
          if_false: "false"

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        if: ${{ steps.filter.outputs.module_changed != '' || steps.filter.outputs.pyproject_changed == 'true' }}
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install MultiQC"
        if: ${{ steps.filter.outputs.module_changed != '' || steps.filter.outputs.pyproject_changed == 'true' }}
        run: pip install .

      - name: "Download test data"
        uses: actions/checkout@v4
        if: ${{ steps.filter.outputs.module_changed != '' || steps.filter.outputs.pyproject_changed == 'true' }}
        with:
          repository: MultiQC/test-data
          path: test-data

      - if: ${{ steps.filter.outputs.module_changed != '' }}
        run: multiqc -fv --strict test-data/data/modules -m ${{ steps.filter.outputs.changes.modules[0] }}

      - if: ${{ steps.filter.outputs.pyproject_changed == 'true' }}
        run: multiqc -fv --strict test-data/data/modules

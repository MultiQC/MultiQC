name: "Integration test"
on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"

jobs:
  changes:
    name: "Check for changes"
    runs-on: ubuntu-latest
    outputs:
      changed_module: ${{ steps.changed_module.outputs.value }}
      pyproject_changed: ${{ steps.filter.outputs.changes.pyproject }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            modules:
              - "multiqc/modules/**"
            base_module:
              - "multiqc/modules/base_module.py"
            changelog:
              - "CHANGELOG.md"
            all_files:
              - "**"
            pyproject:
              - "pyproject.toml"

      - name: "Get the changed module"
        uses: haya14busa/action-cond@v1
        id: changed_module
        with:
          cond: ${{ ! steps.filter.outputs.changes.base_module && steps.filter.outputs.changes.n_modules == 1 }}
          if_true: "${{ steps.filter.outputs.changes.modules[0] }}"
          if_false: ""

  integration_test_linux:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-20.04
    needs: changes
    strategy:
      matrix:
        python-version: ["3.8", "3.12"] # Oldest and newest supported Python versions
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install MultiQC"
        run: pip install .

      - name: "Download test data"
        uses: actions/checkout@v4
        with:
          repository: MultiQC/test-data
          path: test-data

      - name: "Run all modules if pyproject.toml has changed or needs.changes.outputs.changed_module is not null"
        run: |
          if [ "${{ ! -z needs.changes.outputs.changed_module }}" ]; then
            multiqc -fv -m ${{ needs.changes.outputs.changed_module }} --strict test-data/data/modules
          else if [ "${{ needs.changes.filter.outputs.pyproject_changed }}" ]; then
            multiqc -fv --strict test-data/data/modules
          fi

import logging
import re

from multiqc.base_module import BaseMultiqcModule
from multiqc.plots import table
from multiqc.plots.table_object import TableConfig

log = logging.getLogger(__name__)


class MultiqcModule(BaseMultiqcModule):
    """The module parses the output files generated by CheckM.
    It will only parse an output file from `checkm lineage_wf`, `checkm taxonomy_wf`, and `checkm qa`.
    The output file needs to be in format 1 (`-o 1`).
    All statistics for all samples are saved to `multiqc_data/checkm-table.txt`.

    This has been tested with CheckM v1.2.1 .
    """

    def __init__(self):
        super(MultiqcModule, self).__init__(
            name="CheckM",
            anchor="checkm",
            href="https://github.com/Ecogenomics/CheckM",
            info="CheckM estimates genome completeness and contamination based on the presence or absence of marker genes.",
            doi=["10.1101/gr.186072.114"],
        )

        self.checkm_data = {}
        for f in self.find_log_files(
            "checkm",
            filehandles=True,
        ):
            self.parse_file(f)
            self.add_data_source(f)
        self.checkm_data = self.ignore_samples(self.checkm_data)
        if len(self.checkm_data) == 0:
            raise ModuleNoSamplesFound
        log.info(f"Found {len(self.checkm_data)} reports")
        self.add_software_version()

        self.mag_quality_table()

    def parse_file(self, f):
        pass

    def mag_quality_table(self):
        pass

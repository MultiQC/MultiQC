# serializer version: 1
# name: TestFastqcModule.test_fastqc_snapshot[]
  dict({
    'multiqc_fastqc': dict({
      'SRR1067503_1': dict({
        '%GC': 44.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'SRR1067503_1.fastq.gz',
        'Sequence length': 36.0,
        'Sequences flagged as poor quality': 0.0,
        'Total Sequences': 30680980.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 36.0,
        'basic_statistics': 'pass',
        'kmer_content': 'fail',
        'median_sequence_length': 36,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'warn',
        'per_base_sequence_quality': 'pass',
        'per_sequence_gc_content': 'warn',
        'per_sequence_quality_scores': 'pass',
        'per_tile_sequence_quality': 'pass',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'pass',
        'total_deduplicated_percentage': 86.841642,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[groups]
  dict({
    'multiqc_fastqc': dict({
      'single': dict({
        '%GC': 50.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'single.fastq.gz',
        'Sequence length': '91-108',
        'Sequences flagged as poor quality': 0.0,
        'Total Bases': '26.6 Mbp',
        'Total Sequences': 266736.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 100.052051,
        'basic_statistics': 'pass',
        'median_sequence_length': 100,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'fail',
        'per_base_sequence_quality': 'fail',
        'per_sequence_gc_content': 'fail',
        'per_sequence_quality_scores': 'fail',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'warn',
        'total_deduplicated_percentage': 98.227962,
      }),
      'test_1': dict({
        '%GC': 50.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'test_1.fastq.gz',
        'Sequence length': '91-108',
        'Sequences flagged as poor quality': 0.0,
        'Total Bases': '26.6 Mbp',
        'Total Sequences': 266736.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 100.052051,
        'basic_statistics': 'pass',
        'median_sequence_length': 100,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'fail',
        'per_base_sequence_quality': 'fail',
        'per_sequence_gc_content': 'fail',
        'per_sequence_quality_scores': 'fail',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'warn',
        'total_deduplicated_percentage': 98.227962,
      }),
      'test_2': dict({
        '%GC': 48.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'test_2.fastq.gz',
        'Sequence length': '90-107',
        'Sequences flagged as poor quality': 0.0,
        'Total Bases': '26.6 Mbp',
        'Total Sequences': 266736.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 100.050916,
        'basic_statistics': 'pass',
        'median_sequence_length': 100,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'warn',
        'per_base_sequence_quality': 'fail',
        'per_sequence_gc_content': 'warn',
        'per_sequence_quality_scores': 'fail',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'warn',
        'total_deduplicated_percentage': 99.006463,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[issue_1941_unicode]
  dict({
    'multiqc_fastqc': dict({
      'run1_2': dict({
        '%GC': 48.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'run1_2.fq',
        'Sequence length': '150-154',
        'Sequences flagged as poor quality': 0.0,
        'Total Bases': '4.5 kbp',
        'Total Sequences': 30.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 150.7,
        'basic_statistics': 'pass',
        'median_sequence_length': 150,
        'overrepresented_sequences': 'fail',
        'per_base_n_content': 'fail',
        'per_base_sequence_content': 'fail',
        'per_base_sequence_quality': 'pass',
        'per_sequence_gc_content': 'fail',
        'per_sequence_quality_scores': 'fail',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'warn',
        'total_deduplicated_percentage': 93.333333,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[issue_2343_numerical_samples]
  dict({
    'multiqc_fastqc': dict({
      '00050101': dict({
        '%GC': 41.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': '00050101.aligned-bwa.sorted-samtools.merged.rh.dedupped.bam',
        'Sequence length': '30-151',
        'Sequences flagged as poor quality': 0.0,
        'Total Sequences': 873870503.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 148.774488,
        'basic_statistics': 'pass',
        'median_sequence_length': 151,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'fail',
        'per_base_sequence_quality': 'pass',
        'per_sequence_gc_content': 'warn',
        'per_sequence_quality_scores': 'pass',
        'per_tile_sequence_quality': 'pass',
        'sequence_duplication_levels': 'warn',
        'sequence_length_distribution': 'warn',
        'total_deduplicated_percentage': 54.17663,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[nan_reads]
  dict({
    'multiqc_fastqc': dict({
      'sample1_S1_L001_R2_001': dict({
        '%GC': 44.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'sample1_S1_L001_R2_001.fastq.gz',
        'Sequence length': 301.0,
        'Sequences flagged as poor quality': 0.0,
        'Total Sequences': 82330.0,
        'adapter_content': 'fail',
        'avg_sequence_length': 301.0,
        'basic_statistics': 'pass',
        'median_sequence_length': 301,
        'overrepresented_sequences': 'warn',
        'per_base_n_content': 'fail',
        'per_base_sequence_content': 'fail',
        'per_base_sequence_quality': 'fail',
        'per_sequence_gc_content': 'pass',
        'per_sequence_quality_scores': 'warn',
        'per_tile_sequence_quality': 'fail',
        'sequence_duplication_levels': 'fail',
        'sequence_length_distribution': 'pass',
        'total_deduplicated_percentage': 29.744929,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[v0.11.2]
  dict({
    'multiqc_fastqc': dict({
      'SRR1067505_1': dict({
        '%GC': 47.0,
        'Encoding': 'Sanger / Illumina 1.9',
        'File type': 'Conventional base calls',
        'Filename': 'SRR1067505_1.fastq.gz',
        'Sequence length': 36.0,
        'Sequences flagged as poor quality': 0.0,
        'Total Sequences': 18361776.0,
        'adapter_content': 'pass',
        'avg_sequence_length': 36.0,
        'basic_statistics': 'pass',
        'kmer_content': 'fail',
        'median_sequence_length': 36,
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'pass',
        'per_base_sequence_quality': 'pass',
        'per_sequence_gc_content': 'pass',
        'per_sequence_quality_scores': 'pass',
        'per_tile_sequence_quality': 'fail',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'pass',
        'total_deduplicated_percentage': 91.788429,
      }),
    }),
  })
# ---
# name: TestFastqcModule.test_fastqc_snapshot[zero_reads]
  dict({
    'multiqc_fastqc': dict({
      'SK-GBD-000919.1': dict({
        '%GC': 0.0,
        'Encoding': 'Illumina 1.5',
        'File type': 'null',
        'Filename': 'SK-GBD-000919.1.fastq',
        'Sequence length': 0.0,
        'Sequences flagged as poor quality': 0.0,
        'Total Sequences': 0.0,
        'adapter_content': 'warn',
        'basic_statistics': 'pass',
        'overrepresented_sequences': 'pass',
        'per_base_n_content': 'pass',
        'per_base_sequence_content': 'pass',
        'per_sequence_gc_content': 'pass',
        'sequence_duplication_levels': 'pass',
        'sequence_length_distribution': 'pass',
        'total_deduplicated_percentage': 100.0,
      }),
    }),
  })
# ---
